// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    @@map("users")

    id              String  @id @unique
    user_id         String  @unique
    password        String
    name            String
    created_date    DateTime  @default(now())
    is_deleted      Boolean   @default(false)
    avatar_path     String?
    band_ids        String[]

    assets          Asset[]
    replies         Reply[]
}

model Band {
    @@map("bands")

    id              String   @id @unique
    name            String
    description     String?
    created_date    DateTime @default(now())
    is_deleted      Boolean  @default(false)
    leader_id       String
}

model Asset {
    @@map("assets")

    id                  String  @id @unique @default(uuid())
    title               String
    asset_path          String
    thumbnail_path      String
    original_file_name  String
    user_id             String
    created_date        DateTime @default(now())
    is_public           Boolean  @default(true)
    description         String?
    is_deleted          Boolean  @default(false)

    users               User   @relation(fields: [user_id], references: [id])
    replies             Reply[]
}

model Reply {
    @@map("replies")

    id                      String  @id @unique @default(uuid())
    content                 String
    user_id                 String
    asset_id                String
    created_date            DateTime  @default(now())
    is_deleted              Boolean   @default(false)

    users                   User   @relation(fields: [user_id], references: [id])
    assets                  Asset  @relation(fields: [asset_id], references: [id])
}
